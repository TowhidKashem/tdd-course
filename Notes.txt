Jest:

  - test runner by facebook
  - can be used to test any JavaScript not just React
  - write tests in the "__tests__" folder or with a `<NAME>.test.js` extension
  - supports snapshot testing, coverage and mocking

Enzyme:

  - test utility library for React by airbnb
  - Used to only test React apps
  - can use it to simulate user behavior like clicking buttons, typing, etc
  - can test the effects of user behavior on internal and redux state

* Test Coverage is a report run via `yarn run test --coverage`, it shows many metrics like how many lines of code is covered by tests, how many functions, uncovered lines, etc
  It also shows the line numbers that aren't covered

---------------------------

* `shallow()` renders a component's child components as just the jsx tag and not the entire contents within it, this way you can just test one component at a time

* `expect(app).toMatchSnapshot()` will compare the current snapshot with the last one on record and fail if they are different, if this is expected then press "u" (for update) in the terminal to replace the old snapshot with the new

* Snapshots:

  - are records of a component's render function that are kept track of by Jest, each time something changes in a component that causes it to render differently the snapshot comparison fails
  - these snapshots are stored in a "__snapshots__" directory in the same folder the test resides where a snapshot method was called

* The `.find()` method provided by enzyme allows you to select elements by their JSX tag or classname

* "Test Polution" is the term that refers to relying on the actions done in another it() block to have the result of the current it() block, ideally tests should be seperate units

* beforeEach() and afterEach() methods run before and after each unit test (denoted by it()) within a describe()

---------------------------

Pass props in like so:

  const giftId = 1;
  const mockRemove = jest.fn();
  const props = {
    gift: {
      id: giftId,
      removeGift: mockRemove
    }
  };

  const app = shallow(<App {...props} />);

`mockRemove` is a jest function which mocks the callback prop `removeGift`

Assert a callback has been called with a certain param:

  expect(mockRemove).toHaveBeenCalledWith(giftId);

---------------------------------------------------------------------------------
---------------------------------------------------------------------------------

* Test Driven Development is an approach to coding in which you write tests before features. The approach generally follows these steps.

  - First: write a single unit test to check on a part of the appâ€™s behavior.
  - Second: observe the test failing.
  - Third: Write the code to pass the test.
  - Finally, refactor the code to reduce duplication and lines.

* A unit test checks the smallest possible part of an application for proper behavior.

* Jest is a test runner made by Facebook to test JavaScript environments and is most frequently used to test React applications.

* Snapshot testing in Jest keeps a recorded history of testing files in order to ensure that previous snapshots match current snapshots that generate when the application changes.

* Enzyme is a testing utility library made by Airbnb that allow us to interact with React components.

* Behavior Driven Development is a variation of test driven development that hones in on user scenarios and behaviors that affect the app state.

  - Given, when, and then/and represent key words in the BDD structure and help document the user scenarios for the application.

---------------------------------------------------------------------------------
---------------------------------------------------------------------------------

